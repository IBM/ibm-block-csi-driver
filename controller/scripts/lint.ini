[DEFAULT]
# common value between different linters, since none of them support ${section:option}
max-line-length=120


[pycodestyle]
# fnmatch pattern:
exclude=csi_pb2*.py


# the rest of the sections are only for pylint:

[MASTER]
# regex pattern:
ignore-patterns=csi_pb2.*[.]py


[MESSAGES CONTROL]
# Disable the message, report, category or checker with the given id(s). You
# can either give multiple identifier separated by comma (,) or put this option
# multiple time (only on the command line, not in the configuration file where
# it should appear only once).
# relevant categories: E - Error, W - Warning, R - Refactor, C - Convention
disable=
 # easy:
 raise-missing-from, # W - happened only on Jenkins, add "from" after some of the "raise"
 super-init-not-called, # W - always call parent init (to allow valid inheritance in future code)
 inconsistent-return-statements, # R - missing explicit "return None" at the end of some functions
 consider-using-in, consider-using-set-comprehension, # R - few occurrences: make code more pythonic
 invalid-name, redefined-builtin, redefined-outer-name, # C, W, W - bad/colliding names: e.g. lower-case const, e.g. id
 no-self-use, # R - some functions should be made static
 arguments-differ, signature-differs, # W - bad method override: keep same args num+names, keep same args default values
 global-statement, # W - no need to use "global" for logger
 protected-access, # W - convert private-methods UTs to public. some might require to add mocks
 no-member, # E - fix easy ones (_AssertRaisesContext,Base*Exception,Abstract*Test), disable the rest in code (protobuf)

 # medium:
 no-value-for-parameter, # E - some tests should avoid using mock.patch as a decorator. e.g. with "with" instead
 abstract-method, # W - happened only on Jenkins, but shouldn't: https://github.com/PyCQA/pylint/issues/179
 duplicate-code, # R - usually fixable with a wrapper function/inheritance
  # defaults can be overridden in this file, to "freeze" exiting abuse from growing
  too-many-lines, # C - default max per file: 1000
  too-many-public-methods, too-few-public-methods, # R - default per class: max 20, min 2
  too-many-statements, too-many-return-statements, # R - default max per function: 50, 6
  too-many-arguments, too-many-instance-attributes, too-many-locals, # R - default max: 5, 7, 15

 # hard:
 broad-except, # W - "except Exception" is too general
 logging-format-interpolation, # W - str.format in logger calls is inefficient, use lazy evaluation instead (e.g. %)

 # not in plan to enable:
 missing-module-docstring, missing-class-docstring, missing-function-docstring, # C - not a must if code is clean
 fixme, # W - as long as we allow adding TODOs - can be remained disabled
 invalid-overridden-method, # W - our @classproperty definition hack


[BASIC]
include-naming-hint=y # show enforced regex
good-names=i,e

# lower public snake_case min length (default is 3)
public_rgx=[^\W\dA-Z][^\WA-Z]
private_rgx=_[^\WA-Z]*|__[^\WA-Z\\d_][^\WA-Z]+__)
min_len_of_1_rgx=(%(public_rgx)s{0,}|%(private_rgx)s$
min_len_of_2_rgx=(%(public_rgx)s{1,}|%(private_rgx)s$

attr-rgx=%(min_len_of_2_rgx)s # e.g. "id"
variable-rgx=%(min_len_of_2_rgx)s # e.g. "ex"
inlinevar-rgx=%(min_len_of_1_rgx)s
