pipeline {
    parameters {
        string(name: 'IMAGE_VERSION', defaultValue: "1.10.0")
        string(name: 'DOCKER_REGISTRY', defaultValue: DEFAULT_DOCKER_REGISTRY)
        string(name: 'EMAIL_TO', defaultValue: "")
    }
    environment {
        registryCredentialsID = 'csi_w3_user'
    }
    options {
        ansiColor('xterm')
    }
    agent {
        label  "${env.AGENT_LABEL}"
    }
    stages {
        stage ('Controllers: static code analysis') {
            steps {
                sh './scripts/run_static_code_analysis.sh'
            }
        }
        stage ('Controllers: Unit testing + coverage') {
            steps {
                sh 'mkdir -p build/reports && chmod 777 build/reports'
                sh './scripts/run_unitests.sh `pwd`/build/reports'
            }
        }
        stage ('CSI-node: go local tests') {
            steps {
                sh 'mkdir -p build/reports && chmod 777 build/reports'
                sh 'make test-xunit-in-container'
            }
        }
        stage ('CSI-deployment: k8s yamls validation') {
            steps {
                sh './scripts/run_yamlcheck.sh'
            }
        }
        stage ('Build and push images') {
            steps {
                script {
                    registryUrl = "${DOCKER_REGISTRY}"
                    withCredentials([usernamePassword(credentialsId: registryCredentialsID, usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                        sh 'docker login -u $USERNAME -p $PASSWORD ${DOCKER_REGISTRY}'
                        sh './scripts/ci/build_push_images.sh build/reports/images_url'
                        sh 'docker logout ${DOCKER_REGISTRY}'
                    }
                }
            }
        }
    }
    post {
        always {
            script {
                manager.addShortText("${env.GIT_BRANCH}")
            }
            sh 'ls -la build/reports/'
            junit 'build/reports/*.xml'
            // cobertura coberturaReportFile: 'build/reports/*.xml'   ## TODO: CSI-103 need to run cobertura but it has an issue "No such DSL method"
            archiveArtifacts 'build/reports/images_url'
        }

        failure {
            emailext body: 'Check console output at $BUILD_URL to view the results. \n\n ${CHANGES} \n\n -------------------------------------------------- \n${BUILD_LOG, maxLines=100, escapeHtml=false}',
                    to: "${env.EMAIL_TO}",
                    subject: 'Build failed in Jenkins: $PROJECT_NAME - #$BUILD_NUMBER'
        }
        unstable {
            emailext body: 'Check console output at $BUILD_URL to view the results. \n\n ${CHANGES} \n\n -------------------------------------------------- \n${BUILD_LOG, maxLines=100, escapeHtml=false}',
                    to: "${env.EMAIL_TO}",
                    subject: 'Unstable build in Jenkins: $PROJECT_NAME - #$BUILD_NUMBER'
        }
        changed {
            emailext body: 'Check console output at $BUILD_URL to view the results.',
                    to: "${env.EMAIL_TO}",
                    subject: 'Jenkins build is back to normal: $PROJECT_NAME - #$BUILD_NUMBER'
        }

        cleanup {
            script {
                sh '[ -d build/reports ] && rm -rf build/reports'
            }
        }

    }
}
