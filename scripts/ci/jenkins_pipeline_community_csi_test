pipeline {
    agent {
        label 'docker-engine'
    }
    stages {
        stage ('CSI-controller: build and start controller server and csi sanity tests') {
            steps {
                sh  './scripts/ci/run_community_csi_test.sh'
            }
        }
    }

    post {
        always {
            sh './scripts/ci/community_csi_test_cleanup.sh csi-controller'
            sh './scripts/ci/community_csi_test_cleanup.sh csi-sanity-test'
            sh 'cat server_output'
            archiveArtifacts 'csi_controller_logs'
	        sh 'ls build/reports'
            junit 'build/reports/*.xml'
            sh '[ -d build/reports ] && rm -rf build/reports'
            sh '[ -f csi_controller_logs ] && rm -f csi_controller_logs'

        }
    }
}
