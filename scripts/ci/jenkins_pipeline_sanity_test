pipeline {
    agent {
        label 'docker-engine'
    }
    stages {
        stage ('CSI-controller: build and start controller server') {
            steps {
                sh './scripts/ci/build_and_run_controller_server.sh csi-controller > /tmp/server_output &'
            }
        }
        stage ('CSI-controller: build and start csi sanity client') {
            steps {
                sh './scripts/ci/build_and_run_sanity_test_client.sh csi-sanity-test > /tmp/client_output &'
            }
        }
	stage ('CSI-controller: add containers to the internal network') {
            steps {
                sh './scripts/csi_test/add_containers_to_network.sh csi-controller csi-sanity-test'
            }
        }

    }
    post {
        always {
            sh 'echo "SERVER OUTPUT"'
            sh 'cat /tmp/server_output'
            junit '/tmp/server_output'
            junit '/tmp/client_output'
        }
    }
}
