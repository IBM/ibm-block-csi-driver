pipeline {
    agent {
        label 'docker-engine'
    }
    stages {
        stage ('CSI-controller: build and start controller server') {
            steps {
                script {
                    out = sh (
                            script: './scripts/ci/build_and_run_controller_server.sh csi-controller &',
                            returnStdout: true
                        ).Trim()
                    sh 'echo ${out} > server_output'
                }

            }
        }
        stage ('CSI-controller: build and start csi sanity client') {
              steps {
			        sh 'mkdir -p build/reports && chmod 777 build/reports'
                    sh './scripts/ci/build_and_run_sanity_test_client.sh csi-sanity-test `pwd`/build/reports/'
              }
        }

    }
    post {
        always {
            sh 'cat server_output'
            archiveArtifacts 'server_output'
	        sh 'ls build/reports'
            junit 'build/reports/*.xml'
            sh '[ -d build/reports ] && rm -rf build/reports'

        }
    }
}
